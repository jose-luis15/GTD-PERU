# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Principal_Window2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

######### IMPORTAMOS LIBRERIAS #########
import source, sys, os, shutil, simplekml
from PyQt5 import QtCore, QtGui, QtWidgets

######### INICIAR LA APLICACIÓN #########
app = QtWidgets.QApplication(sys.argv)
principal_window = QtWidgets.QMainWindow()

######### VENTANA PRINCIPAL #########
class Ui_principal(object):
        def setupUi(self, principal_window):
                principal_window.setObjectName("MainWindow")
                principal_window.resize(700, 500)
                principal_window.setMinimumSize(QtCore.QSize(700, 500))
                principal_window.setMaximumSize(QtCore.QSize(700, 498))
                principal_window.setStyleSheet("")
                self.centralwidget = QtWidgets.QWidget(principal_window)
                self.centralwidget.setObjectName("centralwidget")
                self.button_crear = QtWidgets.QPushButton(self.centralwidget)
                self.button_crear.setGeometry(QtCore.QRect(290, 353, 171, 51))
                self.button_crear.setStyleSheet("border-radius: 25px;")
                self.button_crear.setText("")
                self.button_crear.setObjectName("button_crear")
                self.salir = QtWidgets.QPushButton(self.centralwidget)
                self.salir.setGeometry(QtCore.QRect(471, 414, 101, 31))
                self.salir.setStyleSheet("border-radius: 15px;")
                self.salir.setText("")
                self.salir.setObjectName("salir")
                self.codigo = QtWidgets.QLineEdit(self.centralwidget)
                self.codigo.setGeometry(QtCore.QRect(330, 123, 271, 31))
                self.codigo.setStyleSheet("border: None;\n"
                                        "Background-color: transparent;")
                self.codigo.setObjectName("codigo")
                self.cliente = QtWidgets.QLineEdit(self.centralwidget)
                self.cliente.setGeometry(QtCore.QRect(330, 160, 271, 31))
                self.cliente.setStyleSheet("border: None;\n"
                                        "Background-color: transparent;")
                self.cliente.setObjectName("cliente")
                self.distrito = QtWidgets.QLineEdit(self.centralwidget)
                self.distrito.setGeometry(QtCore.QRect(330, 197, 271, 31))
                self.distrito.setStyleSheet("border: None;\n"
                                        "Background-color: transparent;")
                self.distrito.setObjectName("distrito")
                self.lat = QtWidgets.QLineEdit(self.centralwidget)
                self.lat.setGeometry(QtCore.QRect(330, 232, 271, 31))
                self.lat.setStyleSheet("border: None;\n"
                                "Background-color: transparent;")
                self.lat.setObjectName("lat")
                self.lon = QtWidgets.QLineEdit(self.centralwidget)
                self.lon.setGeometry(QtCore.QRect(330, 268, 271, 31))
                self.lon.setStyleSheet("border: None;\n"
                                "Background-color: transparent;")
                self.lon.setObjectName("lon")
                self.alerta = QtWidgets.QLabel(self.centralwidget)
                self.alerta.setGeometry(QtCore.QRect(110, 320, 531, 21))
                self.alerta.setStyleSheet("color: rgb(255, 0, 0);")
                self.alerta.setObjectName("alerta")
                self.label_2 = QtWidgets.QLabel(self.centralwidget)
                self.label_2.setGeometry(QtCore.QRect(0, 0, 700, 500))
                self.label_2.setStyleSheet("image: url(:/fondos/principal.png);")
                self.label_2.setText("")
                self.label_2.setObjectName("label_2")
                self.label_2.raise_()
                self.button_crear.raise_()
                self.salir.raise_()
                self.codigo.raise_()
                self.cliente.raise_()
                self.distrito.raise_()
                self.lat.raise_()
                self.lon.raise_()
                self.alerta.raise_()
                principal_window.setCentralWidget(self.centralwidget)

                codigo = self.codigo.text()
                cliente = self.cliente.text()
                distrito = self.distrito.text()
                lat = self.lat.text()
                lon = self.lon.text()
                ######### CÓDIGO QUE PERMITE CREAR EL FOLDER #########
                def gui_principal():
                        if len(codigo)==0 or len(cliente)==0 or len(distrito)==0:
                                self.alerta.setText("Ingrese la información completa")
                        elif type(lat)==str or type(lon)!=str or type(cliente)!=str:
                                gui_crear()

                def gui_crear():
                        # Definimos el nombre de nuestros archivos
                        client_name = f'{codigo} - Factibilidad {cliente} - {distrito}'

                        # Creamos la carpeta del cliente
                        os.mkdir(client_name)

                        # Creamos una copia de la planilla dentro de la carpeta del cliente
                        shutil.copy('PLANILLA.xlsm', f'{client_name}/{client_name}.xlsm')

                        # Creamos el kml de ubicación del cliente y la guardamos en la carpeta
                        kml = simplekml.Kml()
                        kml.newpoint(name=cliente, coords=[(lon, lat)])  # lon, lat, optional height
                        kml.save(f'{client_name}/{client_name}.kmz')

                        # Abrimos los archivos creados
                        os.chdir(client_name)
                        os.startfile(f'{client_name}.xlsm')
                        os.startfile(f'{client_name}.kmz')

                self.button_crear.clicked.connect(gui_principal)

                self.retranslateUi(principal_window)
                QtCore.QMetaObject.connectSlotsByName(principal_window)

        def retranslateUi(self, principal_window):
                _translate = QtCore.QCoreApplication.translate
                principal_window.setWindowTitle(_translate(
                "principal_window", "principal_window"))
                self.alerta.setText(_translate(
                "principal_window", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))


# ######### CÓDIGO QUE PERMITE CREAR EL FOLDER #########
# def gui_principal():
#         codigo = Ui_principal.codigo.text()
#         cliente = Ui_principal.cliente.text()
#         distrito = Ui_principal.distrito.text()
#         lat = float(Ui_principal.lat.text())
#         lon = float(Ui_principal.lon.text())

#         if len(codigo)==0 or len(cliente)==0 or len(distrito)==0 or len(lat)==0 or len(lon)==0:
#                 Ui_principal.alerta.setText("Ingrese la información completa")
#         elif type(lat)==str or type(lon)!=str or type(cliente)!=str:
#                 gui_crear()

# def gui_crear():
#         # Definimos el nombre de nuestros archivos
#         client_name = f'{codigo} - Factibilidad {cliente} - {distrito}'

#         # Creamos la carpeta del cliente
#         os.mkdir(client_name)

#         # Creamos una copia de la planilla dentro de la carpeta del cliente
#         shutil.copy('PLANILLA.xlsm', f'{client_name}/{client_name}.xlsm')

#         # Creamos el kml de ubicación del cliente y la guardamos en la carpeta
#         kml = simplekml.Kml()
#         kml.newpoint(name=cliente, coords=[(lon, lat)])  # lon, lat, optional height
#         kml.save(f'{client_name}/{client_name}.kmz')

#         # Abrimos los archivos creados
#         os.chdir(client_name)
#         os.startfile(f'{client_name}.xlsm')
#         os.startfile(f'{client_name}.kmz')


######### BOTONES #########
# principal_window.button_crear.connect(gui_principal)

######### EJECUTABLE #########
# if __name__ == "__main__":
#         app = QtWidgets.QApplication(sys.argv)
#         principal_window = QtWidgets.QMainWindow()
#         ui = Ui_principal()
#         ui.setupUi(principal_window)
#         principal_window.show()
#         sys.exit(app.exec_())

ui = Ui_principal()
ui.setupUi(principal_window)
principal_window.show()
sys.exit(app.exec_())